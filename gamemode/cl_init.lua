---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Комерад.
--- DateTime: 5/22/2018 10:16 PM
---

--include( "cl_research_category.lua" )
--include( "cl_research_technology.lua" )

include( "cl_research_manager.lua" )
include( "cl_utils.lua" )
include( "shared.lua" )
include( "shd_utils.lua" )
include( "cl_player_ext.lua" )

include( "vgui/cl_hud.lua" )
include( "vgui/cl_pickteam.lua" )
include( "vgui/cl_research_menu.lua" )
include( "vgui/cl_scoreboard.lua" )

local function EndMap()
    -- Yay we're a placeholder
    HUD.html:QueueJavascript([[ EVENTS.trigger('show_scoreboard') ]])
end

local function EndPrep()
    -- Yay we're a placeholder
end

local function InitMapEndTimer()
    net.Start("RAM_RequestSyncMapTimer")
    net.SendToServer()
end

local function InitPrepEndTimer()
    net.Start("RAM_RequestSyncPrepTimer")
    net.SendToServer()
end

local function InitSyncScientists()
    net.Start("RAM_RequestScientistSync")
    net.SendToServer()
end

function SyncResearch()
    net.Start("RAM_RequestClientUpdateEntireResearchTable")
    net.SendToServer()
end

function RequestStatus()
    net.Start("RAM_RequestSyncStatus")
    net.SendToServer()
end

function SyncResearchTimer()
    net.Start("RAM_RequestSyncResearchTimer")
    net.SendToServer()
end

net.Receive("RAM_SyncResearchTimer", function()
    local research_time = net.ReadInt(12)
    if timer.Exists("RAM_LocalPlayerResearchTimer") then
        timer.Remove("RAM_LocalPlayerResearchTimer")
    end
    if research_time ~= nil and research_time > 0 then
        timer.Create("RAM_LocalPlayerResearchTimer", research_time, 1, function()
            print("!RAM_SyncResearchTimer!")
        end)
    end
end)

net.Receive("RAM_SyncMapTimer", function()
    local time = net.ReadFloat()
    timer.Create('RAM_TimerMapEnd', time , 1, EndMap)
end)

net.Receive("RAM_SyncPrepTimer", function()
    local time = net.ReadFloat()
    timer.Create('RAM_TimerPrepEnd', time, 1, EndPrep)
end)

net.Receive("RAM_SyncStatus", function()
    local blue_status = net.ReadInt(4)
    local orange_status = net.ReadInt(4)
    team.GetAllTeams()[TEAM_BLUE].ResearchManager.status = blue_status
    team.GetAllTeams()[TEAM_ORANGE].ResearchManager.status = orange_status
end)

local function InitTeamVariables()
    local AllTeams = team.GetAllTeams()
    for ID, TeamInfo in pairs(AllTeams) do
        if (ID ~= TEAM_CONNECTING and ID ~= TEAM_UNASSIGNED and ID ~= TEAM_SPECTATOR) then
            -- These should be client objects.
            local newResearchManager = ClientResearchManager({
                team_index = ID,
                team_name = TeamInfo['Name']
            })
            newResearchManager.status = RESEARCH_STATUS_PREP

            -- key, name, description, cost, tier, reqs, category
            local armorCat = newResearchManager:AddCategory({
                key = 'armor',
                name = 'Armor',
                icon = "shield alternate icon"
            })

            armorCat:AddTechnology({
                key = 'armor_one', -- This is required
                name = 'Armor Type I', -- This is required
                description = '20 Armor',
                tier = 1, -- This is required
            })

            armorCat:AddTechnology({
                key = 'armor_two', -- This is required
                name = 'Armor Type II', -- This is required
                description = '40 Armor',
                tier = 2, -- This is required
                reqs = {'armor_one'}
            })

            armorCat:AddTechnology({
                key = 'armor_three', -- This is required
                name = 'Armor Type III', -- This is required
                description = '60 Armor',
                tier = 3, -- This is required
                reqs = {'armor_two'}
            })

            armorCat:AddTechnology({
                key = 'armor_four', -- This is required
                name = 'Armor Type IV', -- This is required
                description = '80 Armor',
                tier = 4, -- This is required,
                reqs = {'armor_three'}
            })

            armorCat:AddTechnology({
                key = 'armor_five', -- This is required
                name = 'Armor Type V', -- This is required
                description = '100 Armor',
                tier = 5, -- This is required,
                reqs = {'armor_four'}
            })

            local healthCat = newResearchManager:AddCategory({
                key = 'health',
                name = 'Health',
                icon = "plus alternate icon"
            })

            healthCat:AddTechnology({
                key = 'health_one', -- This is required
                name = 'Health Type I', -- This is required
                description = '110 Health',
                tier = 1, -- This is required,
            })

            healthCat:AddTechnology({
                key = 'health_two', -- This is required
                name = 'Health Type II', -- This is required
                description = '120 Health',
                tier = 2, -- This is required
                reqs = {'health_one'}
            })

            healthCat:AddTechnology({
                key = 'health_three', -- This is required
                name = 'Health Type III', -- This is required
                description = '130 Health',
                tier = 3, -- This is required
                reqs = {'health_two'}
            })

            healthCat:AddTechnology({
                key = 'health_four', -- This is required
                name = 'Health Type IV', -- This is required
                description = '140 Health',
                tier = 4, -- This is required
                reqs = {'health_three'}
            })

            healthCat:AddTechnology({
                key = 'health_five', -- This is required
                name = 'Health Type V', -- This is required
                description = '150 Health',
                tier = 5, -- This is required
                reqs = {'health_four'}
            })

            local weapCat = newResearchManager:AddCategory({
                key = 'weapons',
                name = 'Weapons',
                icon = "fighter jet icon"
            })
            weapCat:AddTechnology({
                key = 'revolver',
                name = 'Revolver',
                description = 'Mangum Revolver Pistol',
                class = 'weapon_ram_revolver',
                tier = 1
            })

            weapCat:AddTechnology({
                key = 'shotgun',
                name = 'Shotgun',
                description = 'Basic singlebarrel shotgun',
                class = 'weapon_ram_shotgun',
                tier = 2
            })

            weapCat:AddTechnology({
                key = 'smg',
                name = 'SMG',
                description = 'A low ROF high dmg SMG',
                class = 'weapon_ram_smg',
                tier = 3,
                reqs = { 'revolver' }
            })

            weapCat:AddTechnology({
                key = 'ar',
                name = 'Ar2',
                description = 'A high ROF low dmg AR',
                class = 'weapon_ram_ar2',
                tier = 4,
                reqs = { 'shotgun' }
            })

            weapCat:AddTechnology({
                key = 'crossbow',
                name = 'Crossbow',
                description = 'Classic Crossbow',
                class = 'weapon_crossbow',
                tier = 5,
                reqs = { 'smg' }
            })

            weapCat:AddTechnology({
                key = 'rpg',
                name = 'RPG',
                description = 'Classic RPG',
                class = 'weapon_rpg',
                tier = 6,
                reqs = { 'ar' }
            })

            weapCat:AddTechnology({
                key = 'gauss',
                name = 'Gauss Gun',
                description = 'The HL1 Gauss Gun',
                class = 'weapon_ram_gauss',
                tier = 7,
                reqs = { 'crossbow' }
            })

            weapCat:AddTechnology({
                key = 'egon',
                name = 'Gluon Gun',
                description = 'The HL1 Gluon Gun',
                class = 'weapon_ram_egon',
                tier = 8,
                reqs = { 'rpg' }
            })

            local gadgetCat = newResearchManager:AddCategory({
                key = 'gadgets',
                name = 'Gadgets',
                icon = "wrench icon"
            })

            gadgetCat:AddTechnology({
                key = 'satchel',
                name = 'Satchel Charges',
                description = 'Little surprises!',
                class = 'weapon_ram_satchel',
                tier = 1
            })

            gadgetCat:AddTechnology({
                key = 'grenade',
                name = 'Grenades',
                description = 'Classic Handgrenades',
                class = 'weapon_frag',
                tier = 2,
                reqs = { 'satchel' }
            })

            gadgetCat:AddTechnology({
                key = 'tripmine',
                name = 'Tripmines',
                description = "Don't walk into the lasers!",
                class = 'weapon_ram_tripmine',
                tier = 3,
                reqs = { 'grenade' }
            })

            local implantCat = newResearchManager:AddCategory({
                key = 'implants',
                name = 'Implants',
                icon = "microchip icon"
            })

            implantCat:AddTechnology({
                key = 'legs_one',
                name = 'Cybenetic Legs MKI',
                description = "Walk 25 units faster and run 50 units faster",
                tier = 1
            })

            implantCat:AddTechnology({
                key = 'legs_two',
                name = 'Cybenetic Legs MKII',
                description = "Walk 50 units faster and run 100 units faster",
                tier = 2,
                reqs = { 'legs_one' }
            })

            TeamInfo.ResearchManager = newResearchManager
            TeamInfo.Money = 30000 -- Every team gets $30,000 to start
            TeamInfo.Scientists = 3 -- Every team gets $30,000 to start
            TeamInfo.ResearchManager:ToJSON()
        end
    end
end

function GM:Initialize()
    -- Do stuff
    MsgN("RM Client initializing...")

    self.BaseClass:Initialize()

    InitTeamVariables()
end

-- Hide the standard HUD stuff
local hud = { ["CCrossHair"] = false, ["CHudHealth"] = true, ["CHudBattery"] = true, ["CHudAmmo"] = true, ["CHudSecondaryAmmo"] = true }
function GM:HUDShouldDraw(name)
    if hud[name] then return false end

    -- Allow the weapon to override this
    local ply = LocalPlayer()
    if (IsValid(ply)) then
        local wep = ply:GetActiveWeapon()
        local team = ply:Team()
--        if team ~= TEAM_ORANGE or team ~= TEAM_BLUE then
        if ply:Team() == TEAM_SPECTATOR or ply:Team() == TEAM_UNASSIGNED or ply:Team() == TEAM_CONNECTING then
            return false
        end
        if (IsValid(wep) and wep.HUDShouldDraw ~= nil) then
            return wep.HUDShouldDraw(wep, name)
        end
    end

    return true
end

hook.Add("HUDPaint", "PaintOurHud", function()
    HUD:Draw()
end);

hook.Add("InitPostEntity", "PlayerSpawnSyncTimers", function()
    InitPrepEndTimer()
    InitMapEndTimer()
    InitSyncScientists()
    RequestStatus()
    SyncResearch()
    SyncResearchTimer()
    if HUD.html == nil then
        HUD:Init()
    end
end)

hook.Add("HUDPaint", "ShowNPCHealthAboveHead", function() -- Get the entity we're looking at
    local ent = LocalPlayer():GetEyeTrace().Entity
    -- check if it's really an NPC and the class we want
    if IsValid(ent) and ent:GetClass() == 'ram_simple_scientist' then
        local pos = (ent:GetPos() + Vector(0,-2,80)):ToScreen()
        local team = ''
        local color = Color(255, 255, 255)
        if ent:GetTeam() == TEAM_BLUE then
            team = 'Blue Team'
            color = Color(0, 0, 255)
        else
            team = 'Orange Team'
            color = Color(255, 160, 0)
        end
        -- check we can actually see this part of the entity
        if pos.visible and LocalPlayer():GetPos():Distance(ent:GetPos()) < 100 then -- what info to draw
            draw.DrawText(
                tostring(ent:GetDisplayName()),
                "Trebuchet18",
                pos.x, pos.y,
                color,
                -- how to align the text
                TEXT_ALIGN_CENTER
            )
            draw.DrawText(
                tostring(team),
                "Trebuchet18",
                pos.x, pos.y + 10,
                color,
                -- how to align the text
                TEXT_ALIGN_CENTER
            )
        end
    end
end)

net.Receive('RAM_ShowHelp', function()
    local ply = LocalPlayer()
    local researchStatus = net.ReadInt(4)
    if ( ply:Team() ~= TEAM_CONNECTING and ID ~= TEAM_UNASSIGNED and ID ~= TEAM_SPECTATOR ) then
        if researchStatus == RESEARCH_STATUS_VOTING then
            if HUD.html ~= nil then
                HUD.html:QueueJavascript([[ EVENTS.trigger('toggle_research_menu') ]])
                local current_cursor_status = vgui.CursorVisible()
                gui.EnableScreenClicker((not current_cursor_status))
            end
        end
    end
end)

net.Receive("RAM_ScientistUpdate", function()
    team.GetAllTeams()[TEAM_BLUE].Scientists = net.ReadInt(4)
    team.GetAllTeams()[TEAM_ORANGE].Scientists = net.ReadInt(4)
end)
