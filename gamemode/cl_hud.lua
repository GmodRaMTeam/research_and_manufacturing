---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Комерад.
--- DateTime: 5/30/2018 11:00 PM
---

HUD = {}
HUD.health_frame = nil
HUD.crosshair_frame = nil
HUD.notification_frame = nil
HUD.notification_html_frame = nil
HUD.html = nil

function HUD:Init()
    local hud_frame = vgui.Create("DFrame")
    hud_frame:SetTitle("")
    hud_frame:SetSize(ScrW(), ScrH())
    hud_frame:Center()
    --hud_frame:SetPos(0, ScrH() - ScrH() * 0.15)
    hud_frame:ShowCloseButton(false)
    hud_frame:SetSizable(false)
    hud_frame:SetPaintShadow(true)
    function hud_frame:Paint()
        --    draw.RoundedBox(0, 0, 0, self:GetWide(), self:GetTall(), Color(0, 0, 0, 230))
    end

    self.html = vgui.Create("DHTML", hud_frame)
    self.html:Dock(FILL)
    self.html:OpenURL("asset://garrysmod/gamemodes/research_and_manufacturing/content/html/hud.html")
    self.html:SetAllowLua(true)

    self.html:AddFunction("player", "getInfo", function()
        local player_data = {
            health = LocalPlayer():Health(),
            armor = LocalPlayer():Armor()
            --has_scientist = LocalPlayer():has_scientist()
        }
        --        print(util.TableToJSON(player_data))
        return util.TableToJSON(player_data)
    end)


    print("-- RM HUD Initialized --")
end

function HUD:Draw()
    if HUD.html == nil then
        HUD:Init()
    end
end

local function DrawHud()
    HUD:Draw()
end

net.Receive("RMDynamicNotification", function(len, pl)
    -- Play cute annoying sound
    local stringMsg = net.ReadString()
    local stringStatus = net.ReadString()
    if stringStatus == 'success' then
        surface.PlaySound("garrysmod/save_load1.wav")
    elseif stringSTatus == 'warning' then
        surface.PlaySound("garrysmod/save_load3.wav")
    else
        surface.PlaySound("garrysmod/save_load2.wav")
    end

    HUD.html:QueueJavascript("toastr." .. stringStatus .. "('" .. stringMsg .. "')")
end)

hook.Add("HUDPaint", "PaintOurHud", DrawHud);

-- Hide the standard HUD stuff
local hud = { ["CHudHealth"] = true, ["CHudBattery"] = true, ["CHudAmmo"] = true, ["CHudSecondaryAmmo"] = true }
function GM:HUDShouldDraw(name)
    if hud[name] then return false end

    -- Allow the weapon to override this
    local ply = LocalPlayer()
    if (IsValid(ply)) then
        local wep = ply:GetActiveWeapon()
        local team = ply:Team()
        if team == TEAM_SPECTATOR or team == TEAM_UNASSIGNED or team == TEAM_UNASSIGNED then
            --if ply:Team() == TEAM_SPECTATOR or ply:Team() == TEAM_UNASSIGNED or ply:Team() == TEAM_CONNECTING then
            return false
        end
        if (IsValid(wep) and wep.HUDShouldDraw ~= nil) then
            return wep.HUDShouldDraw(wep, name)
        end
    end

    return true
end

hook.Add("HUDPaint", "ShowNPCHealthAboveHead", function() -- Get the entity we're looking at
    local ent = LocalPlayer():GetEyeTrace().Entity
    -- check if it's really an NPC
    if IsValid(ent) and ent:GetClass() == 'ram_simple_scientist' then -- change the Vector in LocalToWorld to change-- where the text should appear in relation to the ent
        local pos = (ent:GetPos() + Vector(0,-2,80)):ToScreen()
        local team = ''
        local color = Color(255, 255, 255)
        if ent:GetTeam() == TEAM_BLUE then
            team = 'Blue Team'
            color = Color(0, 0, 255)
        else
            team = 'Orange Team'
            color = Color(255, 160, 0)
        end
        --        local x,y = ent:LocalToWorld(ent:GetPos() + Vector(0,0,100)):ToScreen()
        -- check we can actually see this part of the entity
        if pos.visible and LocalPlayer():GetPos():Distance(ent:GetPos()) < 100 then -- what info to draw
            draw.DrawText(
                tostring(ent:GetDisplayName()),
                "Trebuchet18",
                pos.x, pos.y,
                color,
                -- how to align the text
                TEXT_ALIGN_CENTER
            )
            draw.DrawText(
                tostring(team),
                "Trebuchet18",
                pos.x, pos.y + 10,
                color,
                -- how to align the text
                TEXT_ALIGN_CENTER
            )
        end
    end
end)
